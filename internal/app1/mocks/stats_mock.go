// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/jeremycruzz/msds301-wk4.git/internal/app1/common"
)

// Stats is a mock of Service interface.
type Stats struct {
	ctrl     *gomock.Controller
	recorder *StatsMockRecorder
}

// StatsMockRecorder is the mock recorder for Stats.
type StatsMockRecorder struct {
	mock *Stats
}

// NewStats creates a new mock instance.
func NewStats(ctrl *gomock.Controller) *Stats {
	mock := &Stats{ctrl: ctrl}
	mock.recorder = &StatsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Stats) EXPECT() *StatsMockRecorder {
	return m.recorder
}

// Analyze mocks base method.
func (m *Stats) Analyze(blocks []common.Block) (map[string]common.Block, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Analyze", blocks)
	ret0, _ := ret[0].(map[string]common.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Analyze indicates an expected call of Analyze.
func (mr *StatsMockRecorder) Analyze(blocks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Analyze", reflect.TypeOf((*Stats)(nil).Analyze), blocks)
}
